# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
 -group: Terraform-dev


steps:

- task: FileTransform@1
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)'
    fileType: 'json'
    targetFiles: 'parameter.json'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'az-asgmts'
    backendAzureRmResourceGroupName: 'Devops-RG'
    backendAzureRmStorageAccountName: 'devopstrainingstorage'
    backendAzureRmContainerName: 'swathi-tf-state1'
    backendAzureRmKey: 'terraform.tfstate'
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/parameter.json"'
    environmentServiceNameAzureRM: 'az-asgmts'
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'az-asgmts'
